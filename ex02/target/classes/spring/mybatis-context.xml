<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- SqlSession setup for MyBatis Database Layer Spring과 Mybatis 연동 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mapper-config.xml" />
		<property name="mapperLocations" value="classpath:/mappings/*.xml" />
	</bean>
	
	<!-- SqlSessionTemplate -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>
	
	<!-- MapperConfigurer setup for MyBatis Database Layer 
	 with @MapperScan("boardMapper") in BoardMapper Interface -->
	<!-- 인터페이스만 만들어 놓으면 알아서 DAO 만들어준다. -->
	<!-- 인터페이스가 있는 위치 지정. -->
	<!-- 인터페이스 구현클래스 알아서 만들어서 실행해준다. -->
	
	<!-- 방법1. MapperScanner 이용 -->
<!--
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yedam.app.impl" />
	</bean> 
-->	
	
	<!-- 방법2. spring-scan 태그를 이용한다. namespace에서 mybatis-spring 추가 -->
	<mybatis-spring:scan base-package="com.yedam.app.**.mapper"/>

</beans>
